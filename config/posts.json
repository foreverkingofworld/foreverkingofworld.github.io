{
  "posts": [
    {
      "content": "# 2023/7/25日上课总结\r\n## 基本数据类型\r\nchar  \r\nshort  \r\nint  \r\ndouble  \r\nlong  \r\nfloat\r\n## 自定义数据类型\r\n### 结构体\r\n#### 结构体内 按值传参和 按地址传参的不同\r\n1.按值传递参数不会改变实参只会改变形参  \r\n\r\n```\r\n按值传递参数：stu s = {111, \"张三\", 90};\r\n调用结构体参数方式：\r\ns1.id\r\ns1.name\r\ns1.math\r\n``` \r\n\r\n```\r\n按地址传递参数：\r\n    stu *p = NULL;\r\n\tstu s = {111, \"张三\", 90};\r\n\t\r\n\tp = &s;\r\n调用结构体参数方式：\r\np->id\r\np->name\r\np->math\r\n```\r\n\r\n```\r\n结构体定义：\r\ntypedef struct student{\r\n\tint id;\r\n\tchar name[32];\r\n\tint math;\r\n}stu;\r\n```\r\n### 结构体对齐原则\r\n```\r\nstruct struct_b{\r\n\tchar c;\r\n\tshort s;\r\n\tint i;\r\n\tfloat f;\r\n\tlong l;\r\n\tdouble d;\r\n};\r\nsizeof(struct struct_b) == 32 而不是 27\r\n因为其存在结构体对其原则\r\n    计算速度快\r\n    操作次数少\r\n    减少操作步骤\r\n```\r\n### 共用体/联合体\r\n```\r\nunion union_a{\r\n\tchar c;\r\n\tshort s;\r\n\tint i;\r\n\tfloat f;\r\n\tlong l;\r\n\tdouble d;\r\n};\r\n共用一个最大的存储空间，每次调用其中的一个会覆盖上一个  \r\nsizeof(union_a) == 8\r\n```\r\n### 枚举\r\n```\r\nenum A{\r\n\ta = 100,\r\n\tb,\r\n\tc,\r\n\td\r\n};\r\n下一个变量是上一个的+1\r\n调用时直接调用a\r\n```\r\n## 内存分区\r\n#### 代码区\r\n存放的全是二进制代码\r\n#### 静态区(全局区)\r\n存放全局变量和静态变量\r\n#### 常量区\r\n存放常量(程序在运行的期间不能够被改变的量，例如: 10，字符串常量”abcde”， 数组的名字等)\r\n#### 栈区\r\n存放变量\r\n#### 堆区\r\n程序员自由管理的区域  \r\n也是唯一程序员有权限管理操作的内存区域\r\n## 内存管理\r\n1.申请并分配内存    \r\n2.使用内存  \r\n3.释放内存\r\n## 内存管理机制\r\n### 1.内存状态\r\n1.空闲状态  \r\n2.正在使用状态\r\n### 2.内存分配原则\r\n1.正在使用的内存不能分配  \r\n2.只有空闲的内存能分配，被分配后就是正在使用的内存  \r\n3.分配后使用完的内存一定要释放，释放后变为空闲内存  \r\n4.如果使用完后没释放，可能会造成内存泄漏\r\n```\r\nint main(){\r\n\tint *p = (int *)malloc(sizeof(int)*5); // 分配内存\r\n\t\r\n\tfor (int i = 0; i < 5; i++){\r\n\t\tp[i] = i * 10;  // 使用\r\n\t}\r\n\t\r\n\tfor (int i = 0; i < 5; i++){\r\n\t\tprintf(\"%d\\n\", p[i]);``\r\n\t}\r\n\tfree(p);    // 释放内存\r\n\tp = NULL;   // 指针指向空，否则是野指针\r\n\t\r\n\treturn 0;\r\n}\r\n```",
      "data": {
        "title": "2023/7/25日上课总结",
        "date": "2023-07-27 09:51:19",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "2023725-ri-shang-ke-zong-jie"
    },
    {
      "content": "> 欢迎来到我的小站呀😀，很高兴遇见你！🤝\n\n## 🏠 关于本站\n    用你来放一些学习的笔记\n\n## 👨‍💻 博主是谁\n     必然是--一条新人\n## ⛹ 兴趣爱好\n     睡觉😏\n## 📬 联系我呀\n",
      "data": {
        "title": "关于",
        "date": "2019-01-25 19:09:48",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "about"
    },
    {
      "content": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \n\n<!-- more -->\n\n[Github](https://github.com/getgridea/gridea)  \n[Gridea 主页](https://gridea.dev/)  \n[示例网站](https://fehey.com/)\n\n## 特性👇\n📝  你可以使用最酷的 **Markdown** 语法，进行快速创作  \n\n🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片  \n\n🏷️  你可以对文章进行标签分组  \n\n📋  你可以自定义菜单，甚至可以创建外部链接菜单  \n\n💻  你可以在 **Windows**，**MacOS** 或 **Linux** 设备上使用此客户端  \n\n🌎  你可以使用 **𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌** 或 **Coding Pages** 向世界展示，未来将支持更多平台  \n\n💬  你可以进行简单的配置，接入 [Gitalk](https://github.com/gitalk/gitalk) 或 [DisqusJS](https://github.com/SukkaW/DisqusJS) 评论系统  \n\n🇬🇧  你可以使用**中文简体**或**英语**  \n\n🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力  \n\n🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步  \n\n🌱 当然 **Gridea** 还很年轻，有很多不足，但请相信，它会不停向前 🏃\n\n未来，它一定会成为你离不开的伙伴\n\n尽情发挥你的才华吧！\n\n😘 Enjoy~\n",
      "data": {
        "title": "Hello Gridea",
        "date": "2018-12-12 00:00:00",
        "tags": [
          "Gridea"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/hello-gridea.png",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... ",
      "fileName": "hello-gridea"
    }
  ],
  "tags": [
    {
      "name": "Gridea",
      "slug": "b5jYnzBQY",
      "used": true
    }
  ],
  "menus": [
    {
      "link": "/",
      "name": "首页",
      "openType": "Internal"
    },
    {
      "link": "/archives",
      "name": "归档",
      "openType": "Internal"
    },
    {
      "link": "/tags",
      "name": "标签",
      "openType": "Internal"
    },
    {
      "link": "/post/about",
      "name": "关于",
      "openType": "Internal"
    }
  ]
}